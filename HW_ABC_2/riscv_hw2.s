main:
 mv t0, zero #псевдокоманда, которая ассемблируется в базовую инструкцию add(тип «регистр-регистр-регистр» (Register))
 li t1, 1    #псевдокоманда, которая ассемблируется в базовую инструкцию addi(тип «непосредственное значение-регистр-регистр» (Immediate))
 
 li a7, 5   #псевдокоманда, которая ассемблируется в базовую инструкцию addi(тип «непосредственное значение-регистр-регистр» (Immediate))
 ecall	    #базовая инструкция, которая выполняет системный вызов, указанный значением в a7  (тип «непосредственное значение-регистр-регистр» (Immediate)
 mv t3, a0  #псевдокоманда, которая ассемблируется в базовую инструкцию add(тип «регистр-регистр-регистр» (Register))
fib:
 beqz t3, finish  #псевдокоманда, которая ассемблируется в базовую инструкцию beq, SB-type
 add t2, t1, t0   #базовая инструкция, тип «регистр-регистр-регистр» (Register)
 mv t0, t1        #псевдокоманда, которая ассемблируется в базовую инструкцию add(тип «регистр-регистр-регистр» (Register))
 mv t1, t2	  #псевдокоманда, которая ассемблируется в базовую инструкцию add(тип «регистр-регистр-регистр» (Register))	
 addi t3, t3, -1  #базовая инструкция, тип «непосредственное значение-регистр-регистр» (Immediate)
 j fib            #псевдокоманда, которая ассемблируется в базовую инструкцию jal, UJ-type
finish:
 li a7, 1        #псевдокоманда, которая ассемблируется в базовую инструкцию addi(тип «непосредственное значение-регистр-регистр» (Immediate))
 mv a0, t0       #псевдокоманда, которая ассемблируется в базовую инструкцию add(тип «регистр-регистр-регистр» (Register))
 ecall           #базовая инструкция, которая выполняет системный вызов, указанный значением в a7  (тип «непосредственное значение-регистр-регистр» (Immediate)
 
 
